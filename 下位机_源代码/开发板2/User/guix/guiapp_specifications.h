/*******************************************************************************/
/*  This file is auto-generated by Azure RTOS GUIX Studio. Do not edit this    */
/*  file by hand. Modifications to this file should only be made by running    */
/*  the Azure RTOS GUIX Studio application and re-generating the application   */
/*  specification file(s). For more information please refer to the Azure RTOS */
/*  GUIX Studio User Guide, or visit our web site at azure.com/rtos            */
/*                                                                             */
/*  GUIX Studio Revision 6.2.1.1                                               */
/*  Date (dd.mm.yyyy):  7. 4.2023   Time (hh:mm): 10:38                        */
/*******************************************************************************/


#ifndef _GUIAPP_SPECIFICATIONS_H_
#define _GUIAPP_SPECIFICATIONS_H_

#include "gx_api.h"

/* Determine if C++ compiler is being used, if so use standard C.              */
#ifdef __cplusplus
extern   "C" {
#endif

/* Define widget ids                                                           */

#define GUIX_ID_Win_eisny_back 1
#define window_ID_eis_sm 2
#define GUIX_ID_Win_eisbode_back 3
#define GUIX_ID_NY 4
#define GUIX_ID_BO 5
#define GUIX_ID_ZRI 6
#define window_ID_eis_fit 7
#define window_ID_eis_orig 8
#define ID_eis_origin_back 9
#define ID_eiscv_numpad 10
#define NUM_BUTTON1 11
#define NUM_BUTTON2 12
#define NUM_BUTTON3 13
#define NUM_BUTTON4 14
#define NUM_BUTTON5 15
#define NUM_BUTTON6 16
#define NUM_BUTTON7 17
#define NUM_BUTTON8 18
#define NUM_BUTTON9 19
#define NUM_SINGLE_TEXT 20
#define NUM_BUTTON0 21
#define NUM_BUTTONXX 22
#define NUM_BUTTON_CL 23
#define NUM_BUTTON_L 24
#define NUM_BUTTON_DOT 25
#define NUM_BUTTON_OK 26
#define GUIX_ID_Window_cv 27
#define GUIX_ID_Win3back 28
#define GUIX_ID_win2prompt_6 29
#define GUIX_ID_Win2icon_2 30
#define GUIX_ID_win2Prompt1 31
#define GUIX_ID_win2prompt_2 32
#define GUIX_ID_win2prompt_3 33
#define GUIX_ID_win2prompt_4 34
#define GUIX_ID_win2prompt_5 35
#define GUIX_ID_win2prompt_8 36
#define GUIX_ID_win2prompt_9 37
#define GUIX_ID_win2radio_button_4 38
#define GUIX_ID_win2radio_button_5 39
#define GUIX_ID_Win2prompt_10 40
#define GUIX_ID_Win2prompt_10_1 41
#define GUIX_ID_Win2prompt_10_2 42
#define GUIX_ID_Win2prompt_10_3 43
#define GUIX_ID_Win2prompt_10_4 44
#define CV_ID_OK 45
#define GUIX_ID_win2Prompt0 46
#define GUIX_ID_win2radio_button 47
#define GUIX_ID_win2radio_button_1 48
#define GUIX_ID_win2prompt_7 49
#define GUIX_ID_win2radio_button_3 50
#define GUIX_ID_win2radio_button_2 51
#define prompt_cv_time 52
#define prompt_cv_ov 53
#define prompt_cv_sv 54
#define prompt_cv_fv 55
#define prompt_cv_stepv 56
#define prompt_cv_scanv 57
#define CV_ID_ORIGIN 58
#define CV_ID_SM 59
#define CV_ID_FIT 60
#define GUIX_ID_Window_home 61
#define GUIX_ID_Win0IconButCV 62
#define GUIX_ID_Win0PromptCV 63
#define GUIX_ID_Win0IconButEis 64
#define GUIX_ID_Win0PromptEis 65
#define GUIX_ID_Win0IconButFolder 66
#define GUIX_ID_Win0Icon_set 67
#define GUIX_ID_Win0PromptFolder 68
#define GUIX_ID_Win0PromptSetting 69
#define GUIX_ID_Win0PromptCV1 70
#define GUIX_ID_Win0PromptEis1 71
#define GUIX_ID_Win0PromptLock 72
#define GUIX_ID_Win0IconButLock 73
#define GUIX_ID_Window_zzz_lock 74
#define GUIX_ID_Win0ButReg 75
#define GUIX_ID_Win0Icon 76
#define GUIX_ID_Window_eis 77
#define GUIX_ID_Win2back 78
#define prompt_eis_time_ 79
#define EIS_ID_OK 80
#define prompt_eis_time 81
#define prompt_eis_dc 82
#define prompt_eis_ac 83
#define prompt_eis_num 84
#define prompt_eis_fmax 85
#define prompt_eis_fmin 86
#define eis_ID_ORIGIN 87
#define EIS_ID_SM 88
#define EIS_ID_FIT 89


/* Define animation ids                                                        */

#define GX_NEXT_ANIMATION_ID 1


/* Define user event ids                                                       */

#define GX_NEXT_USER_EVENT_ID GX_FIRST_USER_EVENT

#define GX_ACTION_FLAG_DYNAMIC_TARGET 0x01
#define GX_ACTION_FLAG_DYNAMIC_PARENT 0x02
#define GX_ACTION_FLAG_POP_TARGET     0x04
#define GX_ACTION_FLAG_POP_PARENT     0x08

typedef struct GX_STUDIO_ACTION_STRUCT
{
    GX_UBYTE opcode;
    GX_UBYTE flags;
    GX_CONST VOID *parent;
    GX_CONST VOID *target;
    GX_CONST GX_ANIMATION_INFO  *animation;
} GX_STUDIO_ACTION;

typedef struct GX_STUDIO_EVENT_ENTRY_STRUCT
{
    ULONG event_type;
    USHORT event_sender;
    GX_CONST GX_STUDIO_ACTION *action_list;
} GX_STUDIO_EVENT_ENTRY;

typedef struct GX_STUDIO_EVENT_PROCESS_STRUCT 
{
    GX_CONST GX_STUDIO_EVENT_ENTRY *event_table;
    UINT (*chain_event_handler)(GX_WIDGET *, GX_EVENT *);
} GX_STUDIO_EVENT_PROCESS;

/* Declare properties structures for each utilized widget type                 */

typedef struct GX_STUDIO_WIDGET_STRUCT
{
   GX_CHAR *widget_name;
   USHORT  widget_type;
   USHORT  widget_id;
   #if defined(GX_WIDGET_USER_DATA)
   INT   user_data;
   #endif
   ULONG style;
   ULONG status;
   ULONG control_block_size;
   GX_RESOURCE_ID normal_fill_color_id;
   GX_RESOURCE_ID selected_fill_color_id;
   GX_RESOURCE_ID disabled_fill_color_id;
   UINT (*create_function) (GX_CONST struct GX_STUDIO_WIDGET_STRUCT *, GX_WIDGET *, GX_WIDGET *);
   void (*draw_function) (GX_WIDGET *);
   UINT (*event_function) (GX_WIDGET *, GX_EVENT *);
   GX_RECTANGLE size;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *next_widget;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *child_widget;
   ULONG control_block_offset;
   GX_CONST void *properties;
} GX_STUDIO_WIDGET;

typedef struct
{
    GX_CONST GX_STUDIO_WIDGET *widget_information;
    GX_WIDGET        *widget;
} GX_STUDIO_WIDGET_ENTRY;

typedef struct
{
    GX_RESOURCE_ID string_id; 
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
} GX_TEXT_BUTTON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID string_id; 
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
    GX_RESOURCE_ID off_pixelmap_id;
    GX_RESOURCE_ID on_pixelmap_id;
    GX_RESOURCE_ID off_disabled_pixelmap_id;
    GX_RESOURCE_ID on_disabled_pixelmap_id;
} GX_RADIO_BUTTON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID pixelmap_id;
} GX_ICON_BUTTON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID normal_pixelmap_id;
    GX_RESOURCE_ID selected_pixelmap_id;
} GX_ICON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID string_id;
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
} GX_PROMPT_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID wallpaper_id;
} GX_WINDOW_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID string_id;
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
    GX_RESOURCE_ID readonly_fill_color_id;
    GX_RESOURCE_ID readonly_text_color_id;
    GX_CHAR *buffer;
    UINT buffer_size;
} GX_SINGLE_LINE_TEXT_INPUT_PROPERTIES;


/* Declare top-level control blocks                                            */

typedef struct WINDOW_EIS_SM_ZRI_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_sm_zri_icon_button_6;
    GX_ICON window_eis_sm_zri_icon_3;
} WINDOW_EIS_SM_ZRI_CONTROL_BLOCK;

typedef struct WINDOW_EIS_ORIG_ZRI_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_orig_zri_icon_button_6;
    GX_ICON window_eis_orig_zri_icon_3;
} WINDOW_EIS_ORIG_ZRI_CONTROL_BLOCK;

typedef struct WINDOW_EIS_SM_BO_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_sm_bo_icon_button_6;
    GX_ICON window_eis_sm_bo_icon_3;
} WINDOW_EIS_SM_BO_CONTROL_BLOCK;

typedef struct WINDOW_EIS_ORIG_BO_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_orig_bo_icon_button_6;
    GX_ICON window_eis_orig_bo_icon_3;
} WINDOW_EIS_ORIG_BO_CONTROL_BLOCK;

typedef struct WINDOW_EIS_SM_NY_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_sm_ny_icon_button_6;
    GX_ICON window_eis_sm_ny_icon_3;
} WINDOW_EIS_SM_NY_CONTROL_BLOCK;

typedef struct WINDOW_EIS_ORIG_NY_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_orig_ny_icon_button_6;
    GX_ICON window_eis_orig_ny_icon_3;
} WINDOW_EIS_ORIG_NY_CONTROL_BLOCK;

typedef struct WINDOW_EIS_FIT_ZRI_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_fit_zri_icon_button_6;
    GX_ICON window_eis_fit_zri_icon_3;
} WINDOW_EIS_FIT_ZRI_CONTROL_BLOCK;

typedef struct WINDOW_EIS_FIT_BO_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_fit_bo_icon_button_6;
    GX_ICON window_eis_fit_bo_icon_3;
} WINDOW_EIS_FIT_BO_CONTROL_BLOCK;

typedef struct WINDOW_EIS_SM_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_sm_icon_button_5;
    GX_ICON_BUTTON window_eis_sm_icon_button_1;
    GX_ICON_BUTTON window_eis_sm_icon_button;
    GX_ICON_BUTTON window_eis_sm_icon_button_2;
    GX_PROMPT window_eis_sm_prompt_12;
    GX_PROMPT window_eis_sm_prompt_12_1;
    GX_PROMPT window_eis_sm_prompt_12_2;
} WINDOW_EIS_SM_CONTROL_BLOCK;

typedef struct WINDOW_EIS_FIT_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_fit_icon_button_5;
    GX_ICON_BUTTON window_eis_fit_icon_button_1;
    GX_ICON_BUTTON window_eis_fit_icon_button;
    GX_ICON_BUTTON window_eis_fit_icon_button_2;
    GX_PROMPT window_eis_fit_prompt_12;
    GX_PROMPT window_eis_fit_prompt_12_1;
    GX_PROMPT window_eis_fit_prompt_12_2;
} WINDOW_EIS_FIT_CONTROL_BLOCK;

typedef struct WINDOW_EIS_FIT_NY_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_fit_ny_icon_button_6;
    GX_ICON window_eis_fit_ny_icon_3;
} WINDOW_EIS_FIT_NY_CONTROL_BLOCK;

typedef struct WINDOW_EIS_ORIG_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_orig_icon_button_5;
    GX_ICON_BUTTON window_eis_orig_icon_button_1;
    GX_ICON_BUTTON window_eis_orig_icon_button;
    GX_ICON_BUTTON window_eis_orig_icon_button_2;
    GX_PROMPT window_eis_orig_prompt_12;
    GX_PROMPT window_eis_orig_prompt_12_1;
    GX_PROMPT window_eis_orig_prompt_12_2;
} WINDOW_EIS_ORIG_CONTROL_BLOCK;

typedef struct WINDOW_EISCV_NUMPAD_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_TEXT_BUTTON window_eiscv_numpad_button_1;
    GX_TEXT_BUTTON window_eiscv_numpad_button;
    GX_TEXT_BUTTON window_eiscv_numpad_button_2;
    GX_TEXT_BUTTON window_eiscv_numpad_button_3;
    GX_TEXT_BUTTON window_eiscv_numpad_button_4;
    GX_TEXT_BUTTON window_eiscv_numpad_button_5;
    GX_TEXT_BUTTON window_eiscv_numpad_button_6;
    GX_TEXT_BUTTON window_eiscv_numpad_button_7;
    GX_TEXT_BUTTON window_eiscv_numpad_button_8;
    GX_SINGLE_LINE_TEXT_INPUT window_eiscv_numpad_numpad_text_input;
    GX_TEXT_BUTTON window_eiscv_numpad_button_9;
    GX_TEXT_BUTTON window_eiscv_numpad_button_10;
    GX_TEXT_BUTTON window_eiscv_numpad_button_11;
    GX_TEXT_BUTTON window_eiscv_numpad_button_12;
    GX_TEXT_BUTTON window_eiscv_numpad_button_13;
    GX_TEXT_BUTTON window_eiscv_numpad_button_14;
    GX_TEXT_BUTTON window_eiscv_numpad_button_ok;
} WINDOW_EISCV_NUMPAD_CONTROL_BLOCK;

typedef struct WINDOW_CV_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_cv_icon_button;
    GX_PROMPT window_cv_prompt_6;
    GX_ICON window_cv_icon_2;
    GX_PROMPT window_cv_prompt_1;
    GX_PROMPT window_cv_prompt_2;
    GX_PROMPT window_cv_prompt_3;
    GX_PROMPT window_cv_prompt_4;
    GX_PROMPT window_cv_prompt_5;
    GX_PROMPT window_cv_prompt_8;
    GX_PROMPT window_cv_prompt_9;
    GX_RADIO_BUTTON window_cv_radio_button_4;
    GX_RADIO_BUTTON window_cv_radio_button_5;
    GX_PROMPT window_cv_prompt_10;
    GX_PROMPT window_cv_prompt_10_1;
    GX_PROMPT window_cv_prompt_10_2;
    GX_PROMPT window_cv_prompt_10_3;
    GX_PROMPT window_cv_prompt_10_4;
    GX_TEXT_BUTTON window_cv_cv_ok;
    GX_PROMPT window_cv_prompt_10_5;
    GX_PROMPT window_cv_prompt;
    GX_RADIO_BUTTON window_cv_radio_button;
    GX_RADIO_BUTTON window_cv_radio_button_1;
    GX_PROMPT window_cv_prompt_11;
    GX_RADIO_BUTTON window_cv_radio_button_6;
    GX_RADIO_BUTTON window_cv_radio_button_7;
    GX_PROMPT window_cv_prompt_cv_time;
    GX_PROMPT window_cv_prompt_cv_ov;
    GX_PROMPT window_cv_prompt_cv_sv;
    GX_PROMPT window_cv_prompt_cv_fv;
    GX_PROMPT window_cv_prompt_cv_stepv;
    GX_PROMPT window_cv_prompt_cv_scanv;
    GX_TEXT_BUTTON window_cv_cv_origin;
    GX_TEXT_BUTTON window_cv_cv_sm;
    GX_TEXT_BUTTON window_cv_cv_fit;
    GX_PROMPT window_cv_prompt_7;
} WINDOW_CV_CONTROL_BLOCK;

typedef struct WINDOW_HOME_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_home_icon_button_1;
    GX_PROMPT window_home_prompt;
    GX_ICON_BUTTON window_home_icon_button_2;
    GX_PROMPT window_home_prompt_2;
    GX_ICON_BUTTON window_home_icon_button;
    GX_ICON_BUTTON window_home_icon_button_3;
    GX_PROMPT window_home_prompt_3;
    GX_PROMPT window_home_prompt_4;
    GX_ICON window_home_icon;
    GX_PROMPT window_home_prompt_1;
    GX_PROMPT window_home_prompt_5;
    GX_PROMPT window_home_prompt_6;
    GX_ICON_BUTTON window_home_icon_button_4;
} WINDOW_HOME_CONTROL_BLOCK;

typedef struct WINDOW_ZZZ_LOCK_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_TEXT_BUTTON window_zzz_lock_button;
    GX_ICON window_zzz_lock_icon_1;
} WINDOW_ZZZ_LOCK_CONTROL_BLOCK;

typedef struct WINDOW_EIS_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON_BUTTON window_eis_icon_button;
    GX_PROMPT window_eis_prompt_6;
    GX_ICON window_eis_icon_2;
    GX_PROMPT window_eis_prompt_7;
    GX_RADIO_BUTTON window_eis_radio_button_3;
    GX_RADIO_BUTTON window_eis_radio_button_2;
    GX_PROMPT window_eis_prompt;
    GX_RADIO_BUTTON window_eis_radio_button;
    GX_RADIO_BUTTON window_eis_radio_button_1;
    GX_PROMPT window_eis_prompt_1;
    GX_PROMPT window_eis_prompt_2;
    GX_PROMPT window_eis_prompt_3;
    GX_PROMPT window_eis_prompt_4;
    GX_PROMPT window_eis_prompt_5;
    GX_PROMPT window_eis_prompt_8;
    GX_PROMPT window_eis_prompt_eis_time_;
    GX_RADIO_BUTTON window_eis_radio_button_4;
    GX_RADIO_BUTTON window_eis_radio_button_5;
    GX_PROMPT window_eis_prompt_10;
    GX_PROMPT window_eis_prompt_10_1;
    GX_PROMPT window_eis_prompt_10_2;
    GX_PROMPT window_eis_prompt_10_3;
    GX_PROMPT window_eis_prompt_10_4;
    GX_TEXT_BUTTON window_eis_eis_ok;
    GX_PROMPT window_eis_prompt_eis_time;
    GX_PROMPT window_eis_prompt_eis_dc;
    GX_PROMPT window_eis_prompt_eis_ac;
    GX_PROMPT window_eis_prompt_eis_num;
    GX_PROMPT window_eis_prompt_eis_fmax;
    GX_PROMPT window_eis_prompt_eis_fmin;
    GX_TEXT_BUTTON window_eis_eis_origin;
    GX_TEXT_BUTTON window_eis_eis_sm;
    GX_TEXT_BUTTON window_eis_eis_fit;
    GX_PROMPT window_eis_prompt_9;
} WINDOW_EIS_CONTROL_BLOCK;


/* extern statically defined control blocks                                    */

#ifndef GUIX_STUDIO_GENERATED_FILE
extern WINDOW_EIS_SM_ZRI_CONTROL_BLOCK window_eis_sm_zri;
extern WINDOW_EIS_ORIG_ZRI_CONTROL_BLOCK window_eis_orig_zri;
extern WINDOW_EIS_SM_BO_CONTROL_BLOCK window_eis_sm_bo;
extern WINDOW_EIS_ORIG_BO_CONTROL_BLOCK window_eis_orig_bo;
extern WINDOW_EIS_SM_NY_CONTROL_BLOCK window_eis_sm_ny;
extern WINDOW_EIS_ORIG_NY_CONTROL_BLOCK window_eis_orig_ny;
extern WINDOW_EIS_FIT_ZRI_CONTROL_BLOCK window_eis_fit_zri;
extern WINDOW_EIS_FIT_BO_CONTROL_BLOCK window_eis_fit_bo;
extern WINDOW_EIS_SM_CONTROL_BLOCK window_eis_sm;
extern WINDOW_EIS_FIT_CONTROL_BLOCK window_eis_fit;
extern WINDOW_EIS_FIT_NY_CONTROL_BLOCK window_eis_fit_ny;
extern WINDOW_EIS_ORIG_CONTROL_BLOCK window_eis_orig;
extern WINDOW_EISCV_NUMPAD_CONTROL_BLOCK window_eiscv_numpad;
extern WINDOW_CV_CONTROL_BLOCK window_cv;
extern WINDOW_HOME_CONTROL_BLOCK window_home;
extern WINDOW_ZZZ_LOCK_CONTROL_BLOCK window_zzz_lock;
extern WINDOW_EIS_CONTROL_BLOCK window_eis;
#endif

/* Declare event process functions, draw functions, and callback functions     */

UINT _cbEventWindowNumpad(GX_WINDOW *widget, GX_EVENT *event_ptr);
UINT _cbEventWindowCv(GX_WINDOW *widget, GX_EVENT *event_ptr);
UINT _cbEventWindowEis(GX_WINDOW *widget, GX_EVENT *event_ptr);

/* Declare the GX_STUDIO_DISPLAY_INFO structure                                */


typedef struct GX_STUDIO_DISPLAY_INFO_STRUCT 
{
    GX_CONST GX_CHAR *name;
    GX_CONST GX_CHAR *canvas_name;
    GX_CONST GX_THEME **theme_table;
    GX_CONST GX_STRING **language_table;
    USHORT   theme_table_size;
    USHORT   language_table_size;
    UINT     string_table_size;
    UINT     x_resolution;
    UINT     y_resolution;
    GX_DISPLAY *display;
    GX_CANVAS  *canvas;
    GX_WINDOW_ROOT *root_window;
    GX_COLOR   *canvas_memory;
    ULONG      canvas_memory_size;
} GX_STUDIO_DISPLAY_INFO;


/* Declare Studio-generated functions for creating top-level widgets           */

UINT gx_studio_text_button_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_radio_button_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_icon_button_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_icon_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_prompt_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_window_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_text_input_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
UINT gx_studio_named_widget_create(char *name, GX_WIDGET *parent, GX_WIDGET **new_widget);
UINT gx_studio_display_configure(USHORT display, UINT (*driver)(GX_DISPLAY *), GX_UBYTE language, USHORT theme, GX_WINDOW_ROOT **return_root);
UINT gx_studio_auto_event_handler(GX_WIDGET *widget, GX_EVENT *event_ptr, GX_CONST GX_STUDIO_EVENT_PROCESS *record);

/* Determine if a C++ compiler is being used.  If so, complete the standard
  C conditional started above.                                                 */
#ifdef __cplusplus
}
#endif

#endif                                       /* sentry                         */
